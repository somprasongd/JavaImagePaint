<?xml version="1.0" encoding="UTF-8" ?>

<Form version="1.5" maxVersion="1.5" type="org.netbeans.modules.form.forminfo.JAppletFormInfo">
  <AuxValues>
    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="1"/>
    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
    <AuxValue name="designerSize" type="java.awt.Dimension" value="-84,-19,0,5,115,114,0,18,106,97,118,97,46,97,119,116,46,68,105,109,101,110,115,105,111,110,65,-114,-39,-41,-84,95,68,20,2,0,2,73,0,6,104,101,105,103,104,116,73,0,5,119,105,100,116,104,120,112,0,0,1,100,0,0,1,-14"/>
  </AuxValues>

  <Layout class="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout"/>
  <SubComponents>
    <Container class="javax.swing.JPanel" name="jPanel1">
      <Properties>
        <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
          <Dimension value="[800, 600]"/>
        </Property>
      </Properties>
      <AuxValues>
        <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="try {&#xa;   // &#xe40;&#xe0b;&#xe47;&#xe17;&#xe04;&#xe48;&#xe32; url &#xe02;&#xe2d;&#xe07;&#xe23;&#xe39;&#xe1b;&#xa;    String[] str_imageURLs;&#xa;    if (ary_images.size() &gt; 0) {&#xa;        str_imageURLs = new String[ary_images.size()];&#xa;        for (int i = 0; i &lt; ary_images.size(); i++) {&#xa;            str_imageURLs[i] = ary_images.get(i).toString();&#xa;        }&#xa;    } else {&#xa;        str_imageURLs = new String[]{null};&#xa;    }&#xa;    // &#xe40;&#xe0b;&#xe47;&#xe17;&#xe04;&#xe48;&#xe32; url &#xe02;&#xe2d;&#xe07;&#xe23;&#xe39;&#xe1b; stamp&#xa;    String[] str_stampURLs;&#xa;    if (ary_stamps.size() &gt; 0) {&#xa;        str_stampURLs = new String[ary_stamps.size()];&#xa;        for (int i = 0; i &lt; ary_stamps.size(); i++) {&#xa;            str_stampURLs[i] = ary_stamps.get(i).toString();&#xa;        }&#xa;    } else {&#xa;        str_stampURLs = new String[]{null};&#xa;    }&#xa;&#xa;    // set urls of images and annotation&#xa;    URL url_Annotation = new URL(str_annotationURL);&#xa;    URL[] url_Images = convert2URL(str_imageURLs);&#xa;    URL[] url_Stamps = convert2URL(str_stampURLs);&#xa;&#xa;    // load annotation from url to save in temp annotationFileToolbar on client&#xa;    this.readAnnotation(url_Annotation);&#xa;&#xa;    this.setLayout(new BorderLayout());&#xa;&#xa;    // show Image annotationPaintPanel&#xa;    annotationPaintPanel = new AnnotationPaintPanel(temp_file.getPath(), str_usrID, str_hostURL, url_Images[0], url_Stamps);&#xa;    JScrollPane scrollPanel = new JScrollPane(annotationPaintPanel);&#xa;    annotationPaintPanel.setScroll(scrollPanel);&#xa;    // navigator bar&#xa;    AnnotationNavigatorBar annotationNavigatorBar = new AnnotationNavigatorBar(url_Images, annotationPaintPanel);&#xa;    annotationNavigatorBar.setFloatable(false);&#xa;    // thumbnail bar&#xa;    AnnotationThumbnailPanel annotationThumbnailPanel = new AnnotationThumbnailPanel(url_Images, annotationPaintPanel, annotationNavigatorBar);&#xa;    // tools bar &#xa;    AnnotationToolsToolbar annotationToolsToolbar = new AnnotationToolsToolbar(annotationPaintPanel, str_hostURL, is_addAnn);&#xa;    annotationToolsToolbar.setFloatable(false);&#xa;    //annotationToolsToolbar.setOrientation(JToolBar.VERTICAL);&#xa;    annotationPaintPanel.addPropertyChangeListener(annotationToolsToolbar);&#xa;    annotationPaintPanel.setCurrentMode(AnnotationPaintPanel.MODE_NONE);&#xa;    //&#xa;    AnnotationFileToolbar annotationFileToolbar = new AnnotationFileToolbar(annotationPaintPanel);&#xa;    annotationFileToolbar.setFloatable(false);&#xa;    //annotationFileToolbar.addPropertyChangeListener(annotationToolsToolbar);&#xa;&#xa;    AnnotationEditToolbar annotationEditToolbar = new AnnotationEditToolbar(annotationPaintPanel);&#xa;    annotationEditToolbar.addPropertyChangeListener(annotationToolsToolbar);&#xa;    annotationEditToolbar.setFloatable(false);&#xa;&#xa;    //user_panel = new JImagePaintSelectUser(annotationPaintPanel);&#xa;    AnnotationLocationPanel annotationLocationPanel = new AnnotationLocationPanel(&quot;&quot;);&#xa;    annotationPaintPanel.setLocationPanel(annotationLocationPanel);&#xa;&#xa;// old&#xa;//            JPanel panel_inNorth = new JPanel();&#xa;//            panel_inNorth.setLayout(new BorderLayout(0, 2));&#xa;//            panel_inNorth.add(new JLabel(&quot;&#xe1c;&#xe39;&#xe49;&#xe43;&#xe0a;&#xe49; : &quot; + str_userName + &quot;     &quot;), BorderLayout.EAST);&#xa;//            panel_inNorth.add(annotationFileToolbar, BorderLayout.WEST);      &#xa;&#xa;    JPanel panel_north = new JPanel();&#xa;    panel_north.setLayout(new BorderLayout(0, 2));&#xa;    panel_north.add(annotationFileToolbar, BorderLayout.WEST);        // new&#xa;//            panel_north.add(panel_inNorth, BorderLayout.NORTH);               // old&#xa;    if (is_editMode == true) {&#xa;//                panel_north.add(annotationEditToolbar, BorderLayout.SOUTH);   // old    &#xa;        panel_north.add(annotationEditToolbar, BorderLayout.CENTER);      // new&#xa;    }&#xa;&#xa;&#xa;//            panel_inNorth.add(annotationNavigatorBar, BorderLayout.CENTER);       // old&#xa;&#xa;    JPanel panel_south = new JPanel();&#xa;    panel_south.setLayout(new BorderLayout());&#xa;&#xa;    if (is_editMode == true) {&#xa;        // old&#xa;//                JPanel panel_inSouth = new JPanel();&#xa;//                panel_inSouth.setLayout(new FlowLayout(FlowLayout.LEFT));&#xa;//                panel_inSouth.add(annotationToolsToolbar);&#xa;//                panel_inSouth.add(annotationLocationPanel);&#xa;//                panel_south.add(panel_inSouth, BorderLayout.WEST);&#xa;            panel_south.add(annotationToolsToolbar, BorderLayout.WEST);&#xa;    }&#xa;    panel_south.add(annotationNavigatorBar, BorderLayout.CENTER);&#xa;    Label label_aoa = new Label(&quot;(c) Copyright 2008 Alpha Office Automation Co., Ltd&quot;);&#xa;    panel_south.add(label_aoa, BorderLayout.EAST);&#xa;&#xa;&#xa;    this.add(panel_north, BorderLayout.NORTH);&#xa;    this.add(scrollPanel, BorderLayout.CENTER);&#xa;    this.add(panel_south, BorderLayout.SOUTH);&#xa;    this.add(annotationThumbnailPanel, BorderLayout.EAST);&#xa;} catch (MalformedURLException ex) {&#xa;    Logger.getLogger(Annotation.class.getName()).log(Level.SEVERE, null, ex);&#xa;}"/>
      </AuxValues>
      <Constraints>
        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout" value="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout$BorderConstraintsDescription">
          <BorderConstraints direction="Center"/>
        </Constraint>
      </Constraints>

      <Layout class="org.netbeans.modules.form.compat2.layouts.DesignBorderLayout"/>
    </Container>
  </SubComponents>
</Form>
