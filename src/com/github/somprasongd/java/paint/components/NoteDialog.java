/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.github.somprasongd.java.paint.components;

import com.github.somprasongd.java.paint.objects.AnnotationNoteObject;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.Point;
import java.awt.geom.Point2D;

/**
 *
 * @author sompr
 */
public class NoteDialog extends javax.swing.JDialog {

    private Point2D locationStart;
    private boolean antialiased = true;
    private Font font;
    private Color textsColor = Color.BLACK;
    private Color bgsColor =Color.YELLOW;
    private Color brColor = Color.BLUE;   
    private boolean bgTransparent = false;
    private double strokeWidth;
    private AnnotationNoteObject noteObj;
    private String oldNote;

    /**
     * Creates new form NoteDialog
     */
    public NoteDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        fontChooserPanel1 = new com.github.somprasongd.java.paint.components.FontChooserPanel();
        btnBorderColor = new com.github.somprasongd.java.paint.components.ColorButton();
        btnBgColor = new com.github.somprasongd.java.paint.components.ColorButton();
        jLabel1 = new javax.swing.JLabel();
        strokeChooserPanel = new com.github.somprasongd.java.paint.components.StrokeChooserPanel();
        chkbBgTransparent = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtNote = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        btnOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(fontChooserPanel1, gridBagConstraints);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/github/somprasongd/java/paint/Bundle"); // NOI18N
        btnBorderColor.setText(bundle.getString("BORDER_COLOR")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel1.add(btnBorderColor, gridBagConstraints);

        btnBgColor.setText(bundle.getString("BG_COLOR")); // NOI18N
        btnBgColor.setColor(new java.awt.Color(255, 255, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel1.add(btnBgColor, gridBagConstraints);

        jLabel1.setText(bundle.getString("BORDER_SIZE")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel1.add(jLabel1, gridBagConstraints);

        strokeChooserPanel.setMaximumSize(new java.awt.Dimension(50, 50));
        strokeChooserPanel.setPropName("stroke");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel1.add(strokeChooserPanel, gridBagConstraints);

        chkbBgTransparent.setText(bundle.getString("TRANSPARENT_BG")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel1.add(chkbBgTransparent, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        txtNote.setColumns(20);
        txtNote.setRows(5);
        jScrollPane1.setViewportView(txtNote);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        btnOK.setText(bundle.getString("OK")); // NOI18N
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel2.add(btnOK, gridBagConstraints);

        getContentPane().add(jPanel2, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        String note_before = txtNote.getText();
        
        String note_after = note_before.replace("\n", ":");
        
        
        if(!note_after.equals("")){
            this.noteObj = new AnnotationNoteObject(font, textsColor, bgsColor, brColor, new Point((int)locationStart.getX(), (int)locationStart.getY()), note_after, antialiased, strokeChooserPanel.getStroke(), bgTransparent, 0.0, 0.0, 1.0f);
            this.noteObj.setStrokeWidth(strokeChooserPanel.getStrokeWidth());
        }
        
        this.dispose();
    }//GEN-LAST:event_btnOKActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.github.somprasongd.java.paint.components.ColorButton btnBgColor;
    private com.github.somprasongd.java.paint.components.ColorButton btnBorderColor;
    private javax.swing.JButton btnOK;
    private javax.swing.JCheckBox chkbBgTransparent;
    private com.github.somprasongd.java.paint.components.FontChooserPanel fontChooserPanel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private com.github.somprasongd.java.paint.components.StrokeChooserPanel strokeChooserPanel;
    private javax.swing.JTextArea txtNote;
    // End of variables declaration//GEN-END:variables

    public void open(Point2D locationStart, boolean antialiased){
        this.locationStart = locationStart;
        this.antialiased = antialiased;
        
        fontChooserPanel1.reset();
        btnBorderColor.setColor(Color.BLACK);
        btnBgColor.setColor(new java.awt.Color(255, 255, 0));
        chkbBgTransparent.setSelected(false);
        strokeChooserPanel.setStrokeWidth(1.0d);
        txtNote.setText("");
        
        this.setLocationRelativeTo(null);        
        this.setVisible(true);
    }
    
    public void edit(AnnotationNoteObject noteObj, boolean antialiased){
        this.noteObj = noteObj;
        this.locationStart = this.noteObj.getLocation();
        this.antialiased = antialiased;
        
        fontChooserPanel1.setSelectedFont(this.noteObj.getFont());
        fontChooserPanel1.setFontColor(this.noteObj.gettextColor());
        btnBgColor.setColor(this.noteObj.getBGColor());
        btnBorderColor.setColor(this.noteObj.getBDColor());
        chkbBgTransparent.setSelected(this.noteObj.isBackgroundTransparent());
        strokeChooserPanel.setStrokeWidth(this.noteObj.getStrokeWidth());
        
        String str_note =  oldNote.replace(":", "\n");
        txtNote.setText(str_note);
        
        this.setLocationRelativeTo(null);        
        this.setVisible(true);
    }
}
